name: Build

on: push

env:
  # renovate datasource=github-releases depName=timescale/timescaledb
  TIMESCALE_VERSION: 2.19.3

jobs:
  build:
    name: Build Image (pg${{ matrix.postgres_version }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - postgres_version: "17"
            # renovate datasource=docker depName=ghcr.io/cloudnative-pg/postgresql
            cnpg_version: 17.5-11
            latest: "true"
          - postgres_version: "16"
            # renovate datasource=docker depName=ghcr.io/cloudnative-pg/postgresql
            cnpg_version: 16.9-11
          - postgres_version: "15"
            # renovate datasource=docker depName=ghcr.io/cloudnative-pg/postgresql
            cnpg_version: 15.13-11
          - postgres_version: "14"
            # renovate datasource=docker depName=ghcr.io/cloudnative-pg/postgresql
            cnpg_version: 14.18-11
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Get CloudNativePG version
        id: cnpg
        env:
          VERSION: ${{ matrix.cnpg_version }}
        run: |
          {
            echo "version=$VERSION"
            echo "minor=$(cut -d- -f1 <<<"$VERSION")"
            echo "major=$(cut -d. -f1 <<<"$VERSION")"
          } >> $GITHUB_OUTPUT
      - name: Get Timescale version
        id: timescale
        run: |
          {
            echo "version=$TIMESCALE_VERSION"
            echo "minor=$(cut -d. -f-2 <<<"$TIMESCALE_VERSION")"
            echo "major=$(cut -d. -f1 <<<"$TIMESCALE_VERSION")"
          } >> $GITHUB_OUTPUT
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/cloudnativepg-timescale
          flavor: latest=false
          tags: |
            type=raw,priority=1000,value=latest,enable=${{ matrix.latest || 'false' }}
            type=raw,priority=999,value=${{ steps.cnpg.outputs.version }}-ts${{ steps.timescale.outputs.version }}
            type=raw,priority=998,value=${{ steps.cnpg.outputs.minor }}-ts${{ steps.timescale.outputs.minor }}
            type=raw,priority=997,value=${{ steps.cnpg.outputs.major }}-ts${{ steps.timescale.outputs.major }}
            type=raw,priority=996,value=${{ steps.cnpg.outputs.version }}
            type=raw,priority=995,value=${{ steps.cnpg.outputs.minor }}
            type=raw,priority=994,value=${{ steps.cnpg.outputs.major }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and Push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          pull: true
          push: ${{ github.ref_name == 'main' }}
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            POSTGRES_VERSION=${{ matrix.postgres_version }}
            CLOUDNATIVEPG_VERSION=${{ steps.cnpg.outputs.version }}
            TIMESCALE_VERSION=${{ steps.timescale.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Summarize matrix https://github.community/t/status-check-for-a-matrix-jobs/127354/7
  build-success:
    name: Build Successful
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        name: Check matrix status
        run: exit 1
